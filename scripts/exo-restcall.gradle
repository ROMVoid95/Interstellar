buildscript {
	repositories {
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.3'
	}
}

import org.apache.http.client.methods.HttpGet
import org.apache.http.impl.client.HttpClientBuilder

import groovy.json.JsonOutput
import groovy.json.JsonSlurper



def String getTag(int tag) {
	def get = new HttpGet('https://api.github.com/repos/ReadOnly-Mods/Interstellar-Exoplanets/tags')
	get.addHeader("content-type", "application/json")
	def response = HttpClientBuilder.create().build().execute(get)
	def bufferedReader = new BufferedReader(new InputStreamReader(response.getEntity().getContent()))
	def json_beauty = JsonOutput.prettyPrint(bufferedReader.getText())
	def slurper = new groovy.json.JsonSlurper()
	def r = slurper.parseText(json_beauty)
	return r[tag].get("name")
}

def String lastTag() {
	return getTag(0)
}

def String previousTag() {
    return getTag(1)
}

task createTag(type:Exec) {
	commandLine 'git', 'tag', '-a', '' + "${project.ext.v}", '-m', '' + "${project.ext.v}"
}

task pushTag(type:Exec/* , dependsOn: createTag */) {
	commandLine 'git', 'push', 'origin', '' + "${project.ext.v}"
}

task postRelease() {
	doLast {
		def body = ["tag_name": "${project.ext.v}", "target_commitish": "dev-1.12.2", "name": "${project.ext.v}","body": "${project.ext.v}", "prerelease": project.ext.dev]
		def req = new URL('https://api.github.com/repos/ReadOnly-Mods/Interstellar-Exoplanets/releases').openConnection()
		req.setRequestMethod("POST")
		req.setRequestProperty("Authorization","token " + findProperty('git_token').toString())
		req.setDoOutput(true)
		req.getOutputStream().write(JsonOutput.toJson(body).getBytes("UTF-8"))
		logger.quiet "Status code: ${req.getResponseCode()}" // HTTP request done on first read
		def resp = new JsonSlurper().parseText(req.getInputStream().getText())
		logger.quiet "Response: ${resp}"
	}
}

ext {
	lastTag = lastTag()
	previousTag = previousTag()
}
