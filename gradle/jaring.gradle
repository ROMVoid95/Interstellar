import java.util.regex.Matcher

jar {
	manifest {
		mainAttributes(
		  'Timestamp': System.currentTimeMillis(),
		  'Specification-Title': 'exoplanets',
		  'Specification-Vendor': 'romvoid95',
		  'Specification-Version': '1',
		  'Implementation-Title': project.archivesBaseName,
		  'Implementation-Version': project.version,
		  'Implementation-Vendor' :'ROMVoid95',
		  'Implementation-Timestamp': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
		  'Built-On-Java': "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
		  'Built-On': "${project.forge_mc_version}-${project.forge_version}"
		)
		if (project.hasProperty('core_plugin')) {
		  attributes 'FMLCorePluginContainsFMLMod': 'true'
		  attributes 'FMLCorePlugin': project.core_plugin
		}
		if (project.hasProperty('mod_at_file')) {
		  attributes 'FMLAT': project.mod_at_file
		}
		if (project.hasProperty('mod_contained_deps')) {
			attributes 'ContainedDeps': project.mod_contained_deps
		}
	  }
}

task apiJar(type: Jar) {
	onlyIf {
		getBooleanProperty('create_api_jar')
	}
	from(sourceSets.main.output) {
		include "net/rom/api/**"
	}
	from(sourceSets.main.java) {
		include "net/rom/api/**"
	}

	classifier = 'api'
	from apiClasses
	// from sourceSets.api.output
	manifest.mainAttributes(
			'Maven-Artifact': "${project.group}:${project.archivesBaseName}:${project.version}:api",
			'Timestamp': System.currentTimeMillis(),
			'Implementation-Title': project.name + '-api',
			'Implementation-Version': project.version,
			'Built-On': "${project.mc_version}-${project.forge_version}",
			'Built-On-Java': "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})"
	)
}

task deobfJar(type: Jar) {
	onlyIf {
		getBooleanProperty('create_deobf_jar')
	}

	classifier = 'dev'
	from sourceSets.main.output
	manifest {
		mainAttributes(
				'Maven-Artifact': "${project.group}:${project.archivesBaseName}:${project.version}:deobf",
				'Timestamp': System.currentTimeMillis(),
				'Implementation-Title': project.name + '-deobf',
				'Implementation-Version': project.version,
				'Built-On-Java': "${System.getProperty('java.vm.version')} (${System.getProperty('java.vm.vendor')})",
				'Built-On': "${project.mc_version}-${project.forge_version}"
		)
		if (project.hasProperty('at_file')) {
			attributes 'FMLAT': project.at_file
		}
		if (project.hasProperty('core_plugin')) {
			attributes 'FMLCorePlugin': project.core_plugin
		}
	}
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	onlyIf {
		getBooleanProperty('create_javadoc_jar')
	}

	classifier = 'javadoc'
	from javadoc.getDestinationDir()
	manifest.mainAttributes(
			'Maven-Artifact': "${project.group}:${project.archivesBaseName}:${project.version}:javadoc",
			'Timestamp': System.currentTimeMillis(),
			'Implementation-Title': project.name + '-javadoc',
			'Implementation-Version': project.version,
			'Built-On-Java': "${System.getProperty('java.vm.version')} + (${System.getProperty('java.vm.vendor')})",
			'Built-On': "${project.mc_version}-${project.forge_version}"
	)
}

task signJar(type: SignJar, dependsOn: reobfJar) {
	onlyIf {
		getBooleanProperty('do_sign_jar') &&
				project.hasProperty('keyStore')
	}

	inputFile = jar.archivePath
	outputFile = jar.archivePath

	keyStore = secret.keyStore
	alias = secret.keyStoreAlias
	storePass = secret.keyStorePass
	keyPass = secret.keyStoreKeyPass
}

task signApiJar(type: SignJar) {
	onlyIf {
		getBooleanProperty('create_api_jar') &&
				getBooleanProperty('do_sign_jar') &&
				project.hasProperty('keyStore')
	}

	keyStore = secret.keyStore
	alias = secret.keyStoreAlias
	storePass = secret.keyStorePass
	keyPass = secret.keyStoreKeyPass

	inputFile = apiJar.archivePath
	outputFile = apiJar.archivePath
}

task signDeobfJar(type: SignJar) {
	onlyIf {
		getBooleanProperty('create_deobf_jar') &&
				getBooleanProperty('do_sign_jar') &&
				project.hasProperty('keyStore')
	}

	keyStore = secret.keyStore
	alias = secret.keyStoreAlias
	storePass = secret.keyStorePass
	keyPass = secret.keyStoreKeyPass

	inputFile = deobfJar.archivePath
	outputFile = deobfJar.archivePath
}

task signSourceJar(type: SignJar) {
	onlyIf {
		getBooleanProperty('create_source_jar') &&
				getBooleanProperty('do_sign_jar') &&
				project.hasProperty('keyStore')
	}

	keyStore = secret.keyStore
	alias = secret.keyStoreAlias
	storePass = secret.keyStorePass
	keyPass = secret.keyStoreKeyPass

	inputFile = sourceJar.archivePath
	outputFile = sourceJar.archivePath
}

task signJavadocJar(type: SignJar) {
	onlyIf {
		getBooleanProperty('create_javadoc_jar') &&
				getBooleanProperty('do_sign_jar') &&
				project.hasProperty('keyStore')
	}

	keyStore = secret.keyStore
	alias = secret.keyStoreAlias
	storePass = secret.keyStorePass
	keyPass = secret.keyStoreKeyPass

	inputFile = javadocJar.archivePath
	outputFile = javadocJar.archivePath
}

if (getBooleanProperty('do_sign_jar')) {
	build.dependsOn signJar
	build.dependsOn signApiJar
	build.dependsOn signDeobfJar
	build.dependsOn signSourceJar
	build.dependsOn signJavadocJar
}

tasks.publish.dependsOn build
tasks.curseforge.dependsOn publish

artifacts {
	if (getBooleanProperty('create_api_jar')) {
		archives apiJar
	}
	if (getBooleanProperty('create_deobf_jar')) {
		archives deobfJar
	}
	if (getBooleanProperty('create_source_jar')) {
		archives sourceJar
	}
	if (getBooleanProperty('create_javadoc_jar')) {
		archives javadocJar
	}
}